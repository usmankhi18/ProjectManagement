

@model ProjectManagement.Models.Login
@{
    Layout = null;
}
<style>
    .no-padding {
        padding: 0px !important;
    }

    body {
        overflow: hidden;
    }
</style>
<link href="~/Content/bootstrap.css" rel="stylesheet" />

<div class="container-fluid no-padding">
    <div class="col-md-6 no-padding hidden-xs hidden-sm">
        <img width="100%" style="height: fit-content;" src="https://tr2.cbsistatic.com/hub/i/r/2018/03/20/cad44d4d-6707-4703-9eeb-30d539d16a6e/resize/1200x/1be69d3ae9b7c4be604bd2d8058ed960/istock-844535646.jpg" />

    </div>
    <div class="col-md-6 col-sm-12 col-xs-12">
        @using (Html.BeginForm("Index", "Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h1 style="text-align:center;">Project Management</h1>
                <hr />
                <center> <img style=" margin-top:50px;margin-bottom:50px;" src="http://zultec.com/wp-content/uploads/2019/03/zultec-group-logo-2-1.png" /></center>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(s => s.ReturnURL)

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>

                </div>

                @if (TempData["ErrorMSG"] != null)
                {
                    <label style="color:maroon;"> @TempData["ErrorMSG"] </label>
                    <br /><br />
                }
                <div class="form-group">
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(s => s.isRemember) Remember ME
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Login" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }


    </div>
</div>